generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id                Int      @id @default(autoincrement()) 
  name              String
  email             String   @unique
  password          String
  registroAcademico String?  
  accessId          String?
  access            Access?  @relation(fields: [accessId], references: [id]) 
  created_at        DateTime @default(now())
  updated_at        DateTime @updatedAt
  authoredEvents    Event[]  
  // attendances       Attendance[] // Relacionamento com múltiplas inscrições (comentado, se necessário)
}

model Access {
  id         String   @id @default(uuid())
  name       String   @unique
  user       User[]   
  created_at DateTime @default(now())
  updated_at DateTime @updatedAt
}

model Event {
  id         Int       @id @default(autoincrement()) 
  title      String
  content    String?
  data       DateTime
  location   String?
  authorId   Int       
  author     User      @relation(fields: [authorId], references: [id]) 
  created_at DateTime  @default(now())
  updated_at DateTime  @updatedAt
}

// model Attendance {
//   id         String   @id @default(uuid())  // ID único da inscrição
//   name       String   // Nome da inscrição
//   event      Event    @relation(fields: [eventId], references: [id])  // Relacionamento com Event
//   eventId    String   // Chave estrangeira para o evento
//   created_at DateTime @default(now())  // Data de criação
//   updated_at DateTime @updatedAt  // Data de atualização
//   User       User?    @relation(fields: [userId], references: [id]) // Relacionamento com User (opcional)
//   userId     String?  // Chave estrangeira para o usuário (opcional)
// }
